apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: techtrends
  name: techtrends
  namespace: {{ .Values.namespace.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector:
    matchLabels:
      app: techtrends
      tag: latest
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: techtrends
        tag: latest
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: techtrends
      ports:
        - containerPort: {{.Values.ports.containerPort}}
          protocol: TCP
        livenessProbe:
           httpGet:
             path: {{.Values.ports.livenessProbe.httpGet.path}}
             port: {{.Values.ports.livenessProbe.httpGet.port}}
        readinessProbe:
           httpGet:
             path: {{.Values.ports.readinessProbe.httpGet.path}}
             port: {{.Values.ports.livenessProbe.httpGet.port}}
        resources:
        ## The resource requests guarantees that the desired amount 
        ## CPU and memory is allocated for a pod. In this example, 
        ## the pod will be allocated with 64 Mebibytes and 250 miliCPUs.
          requests:
            memory: {{.Values.resources.requests.memory}}
            cpu: {{.Values.resources.requests.cpu}}
        ## The resource limits ensure that the application is not consuming 
        ## more than the specified CPU and memory values. In this example, 
        ## the pod will not surpass 128 Mebibytes and 500 miliCPUs.
          limits:
            memory: {{.Values.resources.limits.memory}}
            cpu: {{.Values.resources.limits.cpu}}
status: {}